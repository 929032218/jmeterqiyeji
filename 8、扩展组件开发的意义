Jmeter扩展组件开发
    扩展组件开发的意义
        定制化开发组件         入参
                               协议
                               复杂调用逻辑
                               功能
                               等等等等


开发前的准备
    使用Intellij IDEA工具
    工具下载网址：https://www.jetbrains.com/idea/
                  破解方法：
                    1.将"jetbrains-agent.jar"文件放到IDEA安装目录下的bin文件夹下
                    2.在idea64.exe.vmoptions文件中最后一样加入：
                        -javaagent:D:\IDEA\bin\jetbrains-agent.jar
                        其中“D:\IDEA\bin\jetbrains-agent.jar”为jetbrains-agent.jar的路径地址
                        注意：路径中最好不要带有中文或空格
                    3.在idea.exe.vmoptions文件中最后一样加入：
                        -javaagent:D:\IDEA\bin\jetbrains-agent.jar

                    4.重启IDEA；
                    5.选择“Activation code”，输入ACTIVATION_CODE.txt文件中的内容；
                    6.点击确定激活即可

                  破解教程：https://www.jiweichengzhu.com/article/c6ae011e3fce496fb11b6ba60c1a0e41
                            https://zhile.io/2018/08/25/jetbrains-license-server-crack.html

创建maven工程及可能遇到的坑
    扩展开发实现的两种方式
        继承AbstractJavaSamplerClient抽象类
        实现JavaSamplerClient接口

    实战Hello Jmeter
        1.打开IDEA，创建Maven工程
        2.点击“Next”;
        3.GroupId填写：test
          Artifactld填写：demo
          点击“Next”
        4.工程名字(Project name)即为demo
          修改工程路径(Project location)为“D:\IdeaProjects\demo”（可以不修改）
          点击“Finish”

        5.新建工程成功后，
            在pom.xml中添加内容如下，用于引入jmeter,版本与你要使用的jmeter版本一致：
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.jmeter</groupId>
                            <artifactId>ApacheJMeter_core</artifactId>
                            <version>5.1.1</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.jmeter</groupId>
                            <artifactId>ApacheJMeter_java</artifactId>
                            <version>5.1.1</version>
                        </dependency>
                    </dependencies>

                    此处为：5.1.1版本
            maven组件地址：https://mvnrepository.com/artifact/org.apache.jmeter，可以查看引用说明

        6.在工程目录src->main->java中新建package：com.demo
        7.在package(com.demo)中新建java class: First

        IDEA 怎么修改maven项目依赖jar的存放位置:https://blog.csdn.net/a15705952175/article/details/80692850
        IntelliJ 中Maven pom.xml依赖不生效解决:https://blog.csdn.net/a58YYXG/article/details/68060226
        8.First代码如下：
            package com.demo;
            import org.apache.jmeter.protocol.java.sampler.AbstractJavaSamplerClient;   //导入AbstractJavaSamplerClient
            import org.apache.jmeter.protocol.java.sampler.JavaSamplerContext;
            import org.apache.jmeter.samplers.SampleResult;

            public class First extends AbstractJavaSamplerClient {
                public SampleResult runTest(JavaSamplerContext javaSamplerContext) {
                    System.out.println("hello jmeter!!!");
                    return null;
                }
            }

        下载软件binary与source版本的区别：https://blog.csdn.net/heimao0307/article/details/79790081
                                          binaries表示已编译好的文件，可以直接使用的版本；
                                          source表示源代码版本，需要自己编译；
        tar.gz和zip的区别：https://blog.csdn.net/suyu_yuan/article/details/52733117
                           https://zhidao.baidu.com/question/873537413743808372.html
                           扩展名为tar.gz和zip的文件其实这两个压缩文件里面包含的内容是一样的,只是压缩格式不一样
                           ,tar.gz格式的文件比zip文件要小不少
                           tar.gz压缩格式用于unix的操作系统,而zip用于windows的操作系统,但在windows系统中用
                           WinRar工具同样可以解压缩tar.gz格式的,所以下载时不用担心或是疑惑什么!
        mvn环境搭建：https://www.cnblogs.com/lzx2509254166/p/7674455.html

        9.在Terminal中输入命令:
            mvn clean package

            来编译生成jar包，jar包位置：工程目录的target目录下，jar包名如：demo-1.0-SNAPSHOT.jar

        10.将编译好的jar包放到jmeter的lib文件夹下的ext文件夹下

        11.重启jmeter

        12.在jmeter中新建一个java 请求，在classname中就能找到对应的包名及类：com.demo.First

        13.在package(com.demo)中新建java class: Second

        14.Second代码如下：
            package com.demo;
            import org.apache.jmeter.config.Arguments;
            import org.apache.jmeter.protocol.java.sampler.JavaSamplerClient;   //导入
            import org.apache.jmeter.protocol.java.sampler.JavaSamplerContext;
            import org.apache.jmeter.samplers.SampleResult;

            public class Second  implements JavaSamplerClient {
                /*这个方法就是一个初始化方法，我们所有的初始化的动作都可以在这里写
                * */
                public void setupTest(JavaSamplerContext javaSamplerContext) {
                    System.out.println("setupTest run");

                }
                /*这个方法就是实现你具体功能逻辑的方法
                * */
                public SampleResult runTest(JavaSamplerContext javaSamplerContext) {
                    System.out.println("runTest run");
                    return null;
                }

                /*这个方法就是来做一些收尾工作的。
                * */
                public void teardownTest(JavaSamplerContext javaSamplerContext) {
                    System.out.println("teardownTest run");

                }
                /*这个方法决定了在jmeter当中要显示哪些属性
                * */
                public Arguments getDefaultParameters() {
                    System.out.println("getDefaultParameters run");
                    return null;
                }
            }

            ---这是JavaSamplerClient的接口方法

        Jmeter中关于中文乱码问题：https://www.cnblogs.com/Wallace-2018/p/11005172.html
                                  https://www.cnblogs.com/MTXue/p/11208176.html
                                  https://www.cnblogs.com/mihoutao/p/10546566.html
            解决方法一：
                1.打开jmter配置文件bin/jmeter.properties
                2.修改配置文件，查找“sampleresult.default.encoding”将其改为utf8，注意要去掉“#”号
                    ampleresult.default.encoding=utf-8

        maven默认编码格式为GBK，要想在cmd中显示中文，就需要修改maven的默认编码格式为utf-8

        修改maven的编码格式为utf-8（cmd中中文显示乱码）：https://blog.csdn.net/mqingo/article/details/80909384
            1.maven默认编码为GBK注:配好MAVEN_HOME的环境变量后,运行cmd.打开cmd 运行mvn -v命令即可.
            2.修改UTF-8为默认编码：
                设置环境变量
                    变量名 MAVEN_OPTS
                    变量值 -Xms256m -Xmx512m -Dfile.encoding=UTF-8
            3.保存,退出cmd.重新打开cmd 运行mvn -v命令即可.

        修改java 请求响应数据中文乱码问题：https://blog.csdn.net/wuyepiaoxue789/article/details/58594253
            方法一：
                1.在java 请求 上添加一个后置处理器"BeanShell PostProcessor"；
                2.其脚本框中输入：prev.setDataEncoding("UTF-8");
                3.保存即可；
                4.运行结果树中的编码就是正常中文了；
            方法二：
                在源代码中将响应结果加上UTF-8编码：
                    //将buffer变量的内容转换为字符串，编码格式为UTF-8赋值给 restultData
                    restultData = new String(buffer,"UTF-8");

函数助手扩展开发demo演示
    扩展组件开发-自定义函数
        1.pom.xml文件增加内容：
            <dependency>
                <groupId>org.apache.jmeter</groupId>
                <artifactId>ApacheJMeter_functions</artifactId>
                <version>5.1.1</version>
            </dependency>

        2.在src/main/java文件夹下，新建package：com.function
            注意：函数扩展插件的名字必须是function,否则jmeter无法识别

        3.在function中新建java类：Plus

        4.Plus代码如下：
            package com.functions;
            import org.apache.jmeter.engine.util.CompoundVariable;
            import org.apache.jmeter.functions.AbstractFunction;
            import org.apache.jmeter.functions.InvalidVariableException;
            import org.apache.jmeter.samplers.SampleResult;
            import org.apache.jmeter.samplers.Sampler;

            import java.util.Collection;
            import java.util.List;

            public class Plus extends AbstractFunction {
                /*执行方法
                * */
                public String execute(SampleResult sampleResult, Sampler sampler) throws InvalidVariableException {
                    System.out.println("execute run!!!");
                    return null;
                }

                /*设置参数，接收用户传递的参数
                * */
                public void setParameters(Collection<CompoundVariable> collection) throws InvalidVariableException {
                    System.out.println("setParameters run!!!");

                }
                /*功能名称
                * */
                public String getReferenceKey() {
                    System.out.println("getReferenceKey run!!!");
                    return "__MyDeom";  //返回函数名称
            //        return null;
                }

                /*功能描述，参数描述
                * */
                public List<String> getArgumentDesc() {
                    System.out.println("getArgumentDesc run!!!");
                    return null;
                }
            }

        5.mvn clean package:打包

        6.jar包放到jmeter/lib/ext/ 下

        7.启动jmeter,在 Tools--->Functon Helper Dialog
                Choose a function 中选择自己定义的函数的函数名即可

        














