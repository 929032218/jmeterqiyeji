进程与线程
    定义与区别：
            进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，是系统进行资源分配和调度的一个
        独立单位。
            线程是进程的一个实体，是cpu调度和分派的基本单位，他是比进程更小的能够独立运行的基本单位，线
        程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源。一个线程可以创建和撤销另一个线程。

            一个线程只能属于一个进程，而一个进程可以拥有多个线程。
            线程是进程工作的最小单位。

            一个进程会分配一个地址空间，进程和线程之间不共享地址空间，即不共享内存。
            同一个进程下的不同的多个线程，共享父进程的地址空间。

            线程在执行过程中，需要协作同步。不同进程的线程间要利用消息的办法实现同步。
            线程作为调度和分配的基本单位，进程作为拥有资源的基本单位。

    进程-优点：
            每个进程互相独立，不影响主程序的稳定性，子进程崩溃不影响其他进程。
            通过增加CPU，就可以扩充性能
            可以尽量减少线程加锁与解锁的影响，极大的提高了性能。

    进程-缺点：
            逻辑控制复杂，需要和主程序交互。
            多进程调度开销大。

    线程-优点：
            程序逻辑和控制方式简单。
            所有线程可以直接共享内存和变量等。
            线程方式消耗的总资源比进程方式少。

    线程-缺点：
            每个线程与主线程共用地址空间，最大内存地址受限。
            线程之间的同步和枷锁不易控制。
            一个线程的崩溃可能影响到整个程序的稳定性。









